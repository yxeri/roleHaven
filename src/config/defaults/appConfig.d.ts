export type AppConfig = {
    jsonKey: string;
    gMapsKey: string;
    mapLayersPath: string;
    hackingApiKey?: string;
    roomNameMaxLength?: number;
    roomNameMinLength?: number;
    deviceIdLength?: number;
    deviceAliasMaxLength?: number;
    defaultWalletAmount?: number;
    walletMinimumAmount?: number;
    positionNameMaxLength?: number;
    docFileMinLength?: number;
    docFileMaxLength?: number;
    docFileTitleMaxLength?: number;
    docFileTitleMinLength?: number;
    docFileCodeMaxLength?: number;
    docFileCodeMinLength?: number;
    calibrationRewardAmount?: number;
    calibrationRewardMinimum?: number;
    calibrationRewardMax?: number;
    calibrationTimeout?: number;
    forumTitleMaxLength?: number;
    forumPostMaxLength?: number;
    signalMaxChange?: number;
    signalChangePercentage?: number;
    signalThreshold?: number;
    signalDefaultValue?: number;
    signalResetTimeout?: number;
    hackingTriesAmount?: number;
    hackingApiHost?: string;
    maxUserTeam?: number;
    shortTeamMaxLength?: number;
    teamNameMaxLength?: number;
    teamVerify?: boolean;
    userDescriptionMaxLength?: number;
    offNameNameMaxLength?: number;
    offNameMinLength?: number;
    requireOffName?: boolean;
    disallowUserRegister?: boolean;
    passwordMaxLength?: number;
    passwordMinLength?: number;
    maxUserWarnings?: number;
    usernameMaxLength?: number;
    usernameMinLength?: number;
    userVerify?: boolean;
    host?: string;
    publicBase?: string;
    privateBase?: string;
    indexName?: string;
    mainJsName?: string;
    mainCssName?: string;
    adminIndexName?: string;
    adminJsName?: string;
    adminCssName?: string;
    routes?: {
        sitePath: string;
        filePath: string;
    }[];
    startupFuncs?: Array<(props: never) => Promise<never | void>>;
    handlers?: string[];
    viewsPath?: string;
    stylesPath?: string;
    scriptsPath?: string;
    requiredPath?: string;
    jsVersion?: string;
    faviconPath?: string;
    Modes: {
        TEST: string;
        PROD: string;
        DEV: string;
    };
    mode?: string;
    dbHost?: string;
    dbPort?: number;
    dbName?: string;
    port?: number;
    socketPath?: string;
    country?: string;
    verboseError?: boolean;
    bypassExternalConnections?: boolean;
    eventName?: string;
    mapPositionsInterval?: number;
    gameCodeAmount?: number;
    gameCodeLength?: number;
    maxHistoryAmount?: number;
    messageMaxLength?: number;
    broadcastMaxLength?: number;
    imageMaxWidth?: number;
    imageMaxHeight?: number;
    imageThumbMaxWidth?: number;
    imageThumbMaxHeight?: number;
    defaultLanguage?: string;
    title?: string;
    showDevInfo?: boolean;
    forceFullscreen?: boolean;
    yearModification?: number;
    dayModification?: number;
    welcomeMessage?: string;
    centerLat?: number;
    centerLong?: number;
    cornerOneLat?: number;
    cornerOneLong?: number;
    cornerTwoLat?: number;
    cornerTwoLong?: number;
    defaultZoomLevel?: number;
    minZoomLevel?: number;
    maxZoomLevel?: number;
    gpsTracking?: boolean;
    disablePositionImport?: boolean;
    ignoreDefaultHandlers?: [
        {
            sitePath: string;
            filePath: string;
        }
    ];
    ignoreDefaultRoutes?: [
        {
            sitePath: string;
            filePath: string;
        }
    ];
    version?: string;
    defaultPositionRadius?: number;
    allowedImages?: {
        CHAT: boolean;
        PROFILE: boolean;
        DOCFILE: boolean;
    };
    maxPositionHistory?: number;
    maxPositionAge?: number;
    minimumPositionAccuracy?: number;
    importedPositionMinAccessLevel?: number;
};
declare let config: AppConfig;
export default config;
