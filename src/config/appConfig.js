const config = {};
config.routes = [
    {
        sitePath: '/api/calibrationMissions',
        filePath: '/routes/rest/bbr/calibrationMissions.js'
    },
    {
        sitePath: '/api/lanternStations',
        filePath: '/routes/rest/bbr/lanternStations.js'
    },
    {
        sitePath: '/api/lanternRounds',
        filePath: '/routes/rest/bbr/lanternRounds.js'
    },
    {
        sitePath: '/api/lanternTeams',
        filePath: '/routes/rest/bbr/lanternTeams.js'
    },
    {
        sitePath: '/api/gameItems',
        filePath: '/routes/rest/bbr/gameItems.js'
    },
];
config.handlers = [
    '/routes/socketHandlers/bbr/calibrationMissions',
    '/routes/socketHandlers/bbr/lanternHacking',
];
config.hackingApiHost = process.env.HACKINGAPIHOST || '34.245.62.115';
config.calibrationRewardAmount = Number(process.env.CALIBRATIONREWARDAMOUNT || config.calibrationRewardAmount || 5);
config.calibrationRewardMinimum = Number(process.env.CALIBRATIONREWARDMINIMUM || config.calibrationRewardMinimum || 0);
config.calibrationRewardMax = Number(process.env.CALIBRATIONREWARDMAX || config.calibrationRewardMax || 20);
config.calibrationTimeout = Number(process.env.CALIBRATIONTIMEOUT || config.calibrationTimeout || 20);
config.hackingApiKey = process.env.HACKINGAPIKEY;
config.hackingApiHost = process.env.HACKINGAPIHOST;
config.hackingTriesAmount = Number(process.env.HACKINGTRIESAMOUNT || config.hackingTriesAmount || 3);
config.signalResetTimeout = Number(process.env.SIGNALRESETINTERVAL || config.signalResetTimeout || 0);
config.signalDefaultValue = Number(process.env.SIGNALDEFAULTVALUE || config.signalDefaultValue || 100);
config.signalThreshold = Number(process.env.SIGNALTRESHHOLD || config.signalThreshold || 50);
config.signalChangePercentage = Number(process.env.SIGNALCHANGEPERCENTAGE || config.signalChangePercentage || 0.2);
config.signalMaxChange = Number(process.env.SIGNALMAXCHANGE || config.signalMaxChange || 10);
config.startupFuncs = [
    async ({ io }) => {
        await import('@/managers/bbr/lanternHacking.js')
            .then((lanternHacking) => lanternHacking.startResetInterval({ io }));
    },
];
export default config;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXBwQ29uZmlnLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiYXBwQ29uZmlnLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUdBLE1BQU0sTUFBTSxHQUFjLEVBQWUsQ0FBQztBQUUxQyxNQUFNLENBQUMsTUFBTSxHQUFHO0lBQ2Q7UUFDRSxRQUFRLEVBQUUsMEJBQTBCO1FBQ3BDLFFBQVEsRUFBRSx5Q0FBeUM7S0FDcEQ7SUFDRDtRQUNFLFFBQVEsRUFBRSxzQkFBc0I7UUFDaEMsUUFBUSxFQUFFLHFDQUFxQztLQUNoRDtJQUNEO1FBQ0UsUUFBUSxFQUFFLG9CQUFvQjtRQUM5QixRQUFRLEVBQUUsbUNBQW1DO0tBQzlDO0lBQ0Q7UUFDRSxRQUFRLEVBQUUsbUJBQW1CO1FBQzdCLFFBQVEsRUFBRSxrQ0FBa0M7S0FDN0M7SUFDRDtRQUNFLFFBQVEsRUFBRSxnQkFBZ0I7UUFDMUIsUUFBUSxFQUFFLCtCQUErQjtLQUMxQztDQUNGLENBQUM7QUFFRixNQUFNLENBQUMsUUFBUSxHQUFHO0lBQ2hCLGdEQUFnRDtJQUNoRCwyQ0FBMkM7Q0FDNUMsQ0FBQztBQUVGLE1BQU0sQ0FBQyxjQUFjLEdBQUcsT0FBTyxDQUFDLEdBQUcsQ0FBQyxjQUFjLElBQUksZUFBZSxDQUFDO0FBRXRFLE1BQU0sQ0FBQyx1QkFBdUIsR0FBRyxNQUFNLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyx1QkFBdUIsSUFBSSxNQUFNLENBQUMsdUJBQXVCLElBQUksQ0FBQyxDQUFDLENBQUM7QUFFcEgsTUFBTSxDQUFDLHdCQUF3QixHQUFHLE1BQU0sQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLHdCQUF3QixJQUFJLE1BQU0sQ0FBQyx3QkFBd0IsSUFBSSxDQUFDLENBQUMsQ0FBQztBQUV2SCxNQUFNLENBQUMsb0JBQW9CLEdBQUcsTUFBTSxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsb0JBQW9CLElBQUksTUFBTSxDQUFDLG9CQUFvQixJQUFJLEVBQUUsQ0FBQyxDQUFDO0FBSzVHLE1BQU0sQ0FBQyxrQkFBa0IsR0FBRyxNQUFNLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxrQkFBa0IsSUFBSSxNQUFNLENBQUMsa0JBQWtCLElBQUksRUFBRSxDQUFDLENBQUM7QUFLdEcsTUFBTSxDQUFDLGFBQWEsR0FBRyxPQUFPLENBQUMsR0FBRyxDQUFDLGFBQWEsQ0FBQztBQUtqRCxNQUFNLENBQUMsY0FBYyxHQUFHLE9BQU8sQ0FBQyxHQUFHLENBQUMsY0FBYyxDQUFDO0FBS25ELE1BQU0sQ0FBQyxrQkFBa0IsR0FBRyxNQUFNLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxrQkFBa0IsSUFBSSxNQUFNLENBQUMsa0JBQWtCLElBQUksQ0FBQyxDQUFDLENBQUM7QUFNckcsTUFBTSxDQUFDLGtCQUFrQixHQUFHLE1BQU0sQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLG1CQUFtQixJQUFJLE1BQU0sQ0FBQyxrQkFBa0IsSUFBSSxDQUFDLENBQUMsQ0FBQztBQUV0RyxNQUFNLENBQUMsa0JBQWtCLEdBQUcsTUFBTSxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsa0JBQWtCLElBQUksTUFBTSxDQUFDLGtCQUFrQixJQUFJLEdBQUcsQ0FBQyxDQUFDO0FBRXZHLE1BQU0sQ0FBQyxlQUFlLEdBQUcsTUFBTSxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsZUFBZSxJQUFJLE1BQU0sQ0FBQyxlQUFlLElBQUksRUFBRSxDQUFDLENBQUM7QUFFN0YsTUFBTSxDQUFDLHNCQUFzQixHQUFHLE1BQU0sQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLHNCQUFzQixJQUFJLE1BQU0sQ0FBQyxzQkFBc0IsSUFBSSxHQUFHLENBQUMsQ0FBQztBQUVuSCxNQUFNLENBQUMsZUFBZSxHQUFHLE1BQU0sQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLGVBQWUsSUFBSSxNQUFNLENBQUMsZUFBZSxJQUFJLEVBQUUsQ0FBQyxDQUFDO0FBRTdGLE1BQU0sQ0FBQyxZQUFZLEdBQUc7SUFDcEIsS0FBSyxFQUFFLEVBQUUsRUFBRSxFQUFrQixFQUFFLEVBQUU7UUFDL0IsTUFBTSxNQUFNLENBQUMsa0NBQWtDLENBQUM7YUFDN0MsSUFBSSxDQUFDLENBQUMsY0FBYyxFQUFFLEVBQUUsQ0FBQyxjQUFjLENBQUMsa0JBQWtCLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUM7SUFDekUsQ0FBQztDQUNGLENBQUM7QUFFRixlQUFlLE1BQU0sQ0FBQyJ9